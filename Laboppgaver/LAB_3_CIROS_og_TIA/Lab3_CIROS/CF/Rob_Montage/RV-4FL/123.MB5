1 '##########################################################'
2 '### ProgramName:
3 '###  - PickPCBFrPal
4 '###
5 '### ProgramDescription:
6 '### Check if PCB pallet in position
7 '### Pick the PCB from Pallet
8 '### Place the PCB at assembly position
9 '### Pick the PCB from assembly position
10 '### Place the PCB at pallet position
11 '###
12 '### Modifications:
13 '###  - 27.07.2016		Puneeth Rajendra		Created
14 '###
15 '##########################################################'
16 '
17 '##########################################################'
18 '		Decleration Of PCB Pallet
19 '##########################################################'
20 Def Plt 1,P_PCBPaletOrigin,P_PCBPaletYDir,P_PCBPaletXDir,P_PCBPaletXYDir,2,5,2
21 '
22 '##########################################################'
23 '		Decleration Of Input and Output signals
24 '##########################################################'
25 '>>>>>> INPUTS - Robot Controller <<<<<<<<'
26 Def Io DI_PCBGripped = Bit,900 'PCB pallet is gripped
27 '
28 '>>>>>> OUTPUTS - Robot Controller <<<<<<<<'
29 Def Io DO_MountLock = Bit,16
30 '
31 '>>>>>> INPUTS - ProfiNet <<<<<<<<'
32 Def Io DI_RetryLastStep = Bit,132
33 Def Io DI_ExitCurrCycle = Bit,133
34 Def Io DI_PalletInFront = Bit,244 'PCB pallet inside the cell
35 Def Io DI_PCBPalletNo = Byte,172
36 '
37 '>>>>>> OUTPUTS - ProfiNet <<<<<<<<'
38 Def Io ReturnErrorValue = Byte,164 'Return value of Error to the PLC
39 '
40 '##########################################################'
41 '		Decleration Of Local Variables
42 '##########################################################'
43 Def Inte FunErrorStatus
44 '
45 '###########################################################'
46 '       Program
47 '###########################################################'
48 m_Slow = m_Fast
49 JOvrd 20
50 Ovrd m_ProgOvrd
51 Accel 15,15
52 DO_MountLock = 1
53 m_PCBPalletCount = 1
54 For i = 1 To 10
55 Spd m_Fast
56 TOOL P_tGripperVac
57 Mov P_PCBPalletHelp
58 *RetryStep:
59  '>>>>>> Check if PCB pallet in position <<<<<<<<<<'
60  Spd m_Fast
61  TOOL P_tGripperVac
62  FunErrorStatus = 0
63  CallP "GrpClose"
64  If ((m_IsTrayLocked = 0) Or (m_PCBPalletCount > 10) Or (m_PCBPalletCount < 1) Or (DI_PalletInFront = 0)) GoTo *RetryStep
65  m_IsTryUsedByRob = 1
66  '
67  '>>>>>> Pick the PCB from Pallet <<<<<<<<<<'
68  Mov (Plt 1,m_PCBPalletCount),-150
69  Mvs (Plt 1,m_PCBPalletCount), -30
70  Spd m_Slow
71  Mvs (Plt 1,m_PCBPalletCount)
72  Dly 0.5
73  CallP "GrpVacOn"
74  Mvs (Plt 1,m_PCBPalletCount), -30
75  m_IsVacEnrgSvEna = 1
76  Mvs (Plt 1,m_PCBPalletCount),-150
77  m_IsTryUsedByRob = 0
78  If (DI_PCBGripped = 0)GoTo *RetryStep
79  '
80  '>>>>>> Place the PCB at the assembly position <<<<<<<<<<'
81  Spd m_Fast
82  TOOL P_tGripperNone
83  Mov P_Home
84  TOOL P_tGripperVac
85  Mov P_AssemblePCB, -150
86  Mvs P_AssemblePCB, -30
87  Spd m_Slow
88  Mvs P_AssemblePCB
89  Dly 0.5
90  '
91  '>>>>>> Place the PCB from assembly position <<<<<<<<<<'
92  m_IsVacEnrgSvEna = 0
93  CallP "GrpVacOn"
94  Spd m_Slow
95  Mvs P_AssemblePCB, -30
96  m_IsVacEnrgSvEna = 1
97  Mvs P_AssemblePCB, -150
98  TOOL P_tGripperNone
99  Mov P_Home
100  '
101  '>>>>>> Place the PCB at the Pallet position <<<<<<<<<<'
102 *RetryStep2:
103  Spd m_Fast
104  TOOL P_tGripperVac
105  FunErrorStatus = 0
106  If ((m_IsTrayLocked = 0) Or (m_PCBPalletCount > 10) Or (m_PCBPalletCount < 1) Or (DI_PalletInFront = 0)) GoTo *RetryStep2
107  Mov (Plt 1,m_PCBPalletCount),-150
108  Mvs (Plt 1,m_PCBPalletCount), -30
109  Spd m_Slow
110  Mvs (Plt 1,m_PCBPalletCount)
111  Dly 0.5
112  m_IsVacEnrgSvEna = 0
113  CallP "GrpVacOff"
114  Spd m_Slow
115  Mvs (Plt 1,m_PCBPalletCount), -30
116  Spd m_Fast
117  Mvs (Plt 1,m_PCBPalletCount), -150
118  m_PCBPalletCount = m_PCBPalletCount + 1
119 Next i
120 Spd m_Fast
121  TOOL P_tGripperNone
122  Mov P_Home
123 *EndOfProg:
124 DO_MountLock = 0
125  m_ReturnedError = 0
126 