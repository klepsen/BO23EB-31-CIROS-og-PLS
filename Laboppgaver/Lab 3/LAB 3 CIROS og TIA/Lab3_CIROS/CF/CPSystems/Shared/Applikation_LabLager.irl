PROGRAM IRL;

FROM MES_200 IMPORT ALL;

VAR
	INT : appId;

PROCEDURE bewegeZNach ( IN  REAL : zInMM; IN BOOL : waitForEndMovement );
VAR
	INPUT BOOL 	: 	Z_AbsBusy		AT 41;
	INPUT REAL	: 	Z_ActPos		AT 40;
	
	OUTPUT BOOL	:	Z_MoveAbs		AT 41;
	OUTPUT REAL	:	Z_SetPos		AT 40;
	OUTPUT REAL	:	Z_Offset		AT 41;
BEGIN
	if( Z_ActPos <> zInMM * 100 ) then
		Z_SetPos := zInMM * 100;
		Z_MoveAbs := true;
		wait for Z_AbsBusy;
		Z_MoveAbs := false;
	endif;
	
	if( waitForEndMovement ) then
		wait for not Z_AbsBusy;
	endif;
ENDPROC;
	
PROCEDURE bewegeXNach ( IN  REAL : xInMM; IN BOOL : waitForEndMovement );
VAR
	INPUT BOOL 	: 	X_AbsBusy		AT 46;
	INPUT REAL	: 	X_ActPos		AT 45;
	

	OUTPUT BOOL	:	X_MoveAbs		AT 46;
	OUTPUT REAL	:	X_SetPos		AT 45;
	OUTPUT REAL	:	X_Offset		AT 46;
BEGIN
	if( X_ActPos <> xInMM * 100 ) then
		X_SetPos := xInMM * 100;
		X_MoveAbs := true;
		wait for X_AbsBusy;
		X_MoveAbs := false;
	endif;
	
	if( waitForEndMovement ) then
		wait for not X_AbsBusy;
	endif;
ENDPROC;

PROCEDURE labReferenzfahrt();
VAR
	INPUT BOOL 	: 	Z_RefBusy		AT 40;
	INPUT BOOL 	: 	X_RefBusy		AT 45;
	INPUT BOOL 	: 	Z_RefDone		AT 42;
	INPUT BOOL 	: 	X_RefDone		AT 47;	
	OUTPUT BOOL	:	Z_RefStart		AT 40;
	OUTPUT BOOL	:	X_RefStart		AT 45;	
BEGIN
	bewegeZNach( 0, false );
	bewegeXNach( 0, true );
	
	Z_RefStart := false;
	X_RefStart := false;
	wait for not Z_RefDone;
	wait for not X_RefDone;
	Z_RefStart := true;
	X_RefStart := true;
	wait for Z_RefDone;
	wait for X_RefDone;
	Z_RefStart := false;
	X_RefStart := false;
ENDPROC;
	
PROCEDURE bewegeNach ( IN  REAL : fach );
VAR
	INPUT BOOL	:	Y_Achse_Pos1_hinten	AT 50;
	INPUT BOOL	:	Y_Achse_Pos2_vorn	AT 51;

	OUTPUT BOOL	:	Y_Achse_nach_vorn	AT 50;
	OUTPUT BOOL	:	Y_Achse_zurueck		AT 51;

	REAL : spalte;
	REAL : zeile;
	REAL : fachZInMM;
	REAL : fachXInMM;
BEGIN
	if( fach > 12 ) then
		fachXInMM := 175;
		fachZInMM := 290;

		{Mitte}
		Y_Achse_zurueck := true;
		Y_Achse_nach_vorn := false;
		wait for Y_Achse_Pos1_hinten;
		
		{Warte auf X fertig}
		bewegeXNach(fachXInMM, true);
		
		{Z-Achse}
		bewegeZNach(fachZInMM, true);
	else
		{Mitte}
		Y_Achse_zurueck := true;
		Y_Achse_nach_vorn := false;
		wait for Y_Achse_Pos1_hinten;
		
		{X-Achse + Z-Achse}
		zeile := (ROUND(((fach-1) / 3) -0.4));
		spalte := fach - (zeile * 3) - 1;
		fachXInMM := 34 + spalte * 140.5 ; 
		fachZInMM := 254 - (zeile * 75); 

		bewegeXNach(fachXInMM, false);
		bewegeZNach(fachZInMM-10, false);
			
		bewegeXNach(fachXInMM, true);
		bewegeZNach(fachZInMM-10, true);
		
		{Mitte}
		Y_Achse_zurueck := false;
		Y_Achse_nach_vorn := true;
		wait for Y_Achse_Pos2_vorn;
		
		{Runter auf Pos}
		bewegeZNach(fachZInMM, true);
	endif;

ENDPROC;


PROCEDURE bewegeZuMitte ( IN  REAL : fach );
VAR
	INPUT BOOL	:	Y_Achse_Pos1_hinten	AT 50;
	INPUT BOOL	:	Y_Achse_Pos2_vorn	AT 51;

	INPUT REAL	: 	Z_ActPos		AT 40;

	OUTPUT BOOL	:	Y_Achse_nach_vorn	AT 50;	
	OUTPUT BOOL	:	Y_Achse_zurueck		AT 51;
	
BEGIN
	if( fach > 12 ) then
		{Z-Achse}
		bewegeZNach(250, true);
	else
		{Hoch von Pos}
		bewegeZNach( (Z_ActPos / 100) - 10, true);

		{Mitte}
		Y_Achse_zurueck := true;
		Y_Achse_nach_vorn := false;
		wait for Y_Achse_Pos1_hinten;
	endif;

ENDPROC;


FUNCTION appLagerLab ( IN ARRAY [1..7] OF REAL: Parameter ) : INT;
VAR
	INPUT  BOOL : GreiferIstZu AT 52;
	INPUT  BOOL : SensorPalettePortal AT 53;
	
	OUTPUT BOOL : GreiferAuf AT 52;
	OUTPUT BOOL : GreiferZu AT  53;
	OUTPUT BOOL : IsActive AT 127;

	INPUT BOOL : LagerInitialisiert AT 140;

	REAL : vonFach;
	REAL : nachFach;
	REAL : partNo;
BEGIN
	IsActive := false;
	wait for LagerInitialisiert;
	
	IsActive := true;	
	GreiferAuf := true;
	GreiferZu := false;
	
	vonFach := Parameter[1];
	nachFach := Parameter[2];
	partNo := Parameter[3];
	
	bewegeNach( vonFach );
	
	{Check Sensor}
	if( not SensorPalettePortal ) then
		if( vonFach < 13 ) then
			{Fach ist leer, sollte aber befüllt sein,
			 Fach sperren und abbrechen}
			if( myResourceId > 0 ) then	
				claimCommunication( true );
				SetBufPos( myResourceID, 0, 0, 1, vonFach, 0, 26, 0 );
				claimCommunication( false );
			endif;
			IsActive := false;
			return( 1 );
		endif;
	endif;
	
	{Greifen}
	GreiferAuf := false;
	GreiferZu := true;
	WAIT FOR GreiferIstZu;
	
	bewegeZuMitte( vonFach );
	
	{Leeres Fach an MES melden}
	if( vonFach < 90 ) then
		if( myResourceId > 0 ) then	
			claimCommunication( true );
			SetBufPos( myResourceID, 0, 0, 1, vonFach, 0, 0, 0 );
			claimCommunication( false );
		endif;
	endif;	
	
	bewegeNach( nachFach );
	
	{Loslassen}
	GreiferAuf := true;
	GreiferZu := false;
	WAIT FOR not GreiferIstZu;
	
	{Neue Fachbelegung an MES melden}
	if( nachFach < 90 ) then
		if( myResourceId > 0 ) then	
			claimCommunication( true );
			SetBufPos( myResourceID, 0, 0, 1, nachFach, 0, partNo, 0 );
			claimCommunication( false );
		endif;
	endif;
	
	bewegeZuMitte( nachFach ); {Grundstellung}
	IsActive := false;
	return( 0 );
ENDFCT;

ENDPROGRAM;
