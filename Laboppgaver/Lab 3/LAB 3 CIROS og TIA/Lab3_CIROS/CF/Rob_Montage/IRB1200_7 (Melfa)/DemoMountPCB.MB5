1 '##########################################################'
2 '### ProgramName:
3 '###  - PickPCBFrPal
4 '###
5 '### ProgramDescription:
6 '### Check if PCB pallet in position
7 '### Pick the PCB from Pallet
8 '### Place the PCB at assembly position
9 '### Pick the PCB from assembly position
10 '### Place the PCB at pallet position
11 '###
12 '### Modifications:
13 '###  - 27.07.2016		Puneeth Rajendra		Created
14 '###
15 '##########################################################'
16 '
17 '##########################################################'
18 '		Decleration Of PCB Pallet
19 '##########################################################'
20 Def Plt 1,P_PCBPaletOrigin,P_PCBPaletYDir,P_PCBPaletXDir,P_PCBPaletXYDir,2,5,2
21 '
22 '##########################################################'
23 '		Decleration Of Input and Output signals
24 '##########################################################'
25 '>>>>>> INPUTS - Robot Controller <<<<<<<<'
26 Def Io DI_PCBGripped = Bit,900 'PCB pallet is gripped
27 '
28 '>>>>>> OUTPUTS - Robot Controller <<<<<<<<'
29 Def Io DO_MountLock = Bit,16
30 '
31 '>>>>>> INPUTS - ProfiNet <<<<<<<<'
32 Def Io DI_RetryLastStep = Bit,132
33 Def Io DI_ExitCurrCycle = Bit,133
34 Def Io DI_PalletInFront = Bit,244 'PCB pallet inside the cell
35 Def Io DI_PCBPalletNo = Byte,172
36 '
37 '>>>>>> OUTPUTS - ProfiNet <<<<<<<<'
38 Def Io ReturnErrorValue = Byte,164 'Return value of Error to the PLC
39 '
40 '##########################################################'
41 '		Decleration Of Local Variables
42 '##########################################################'
43 Def Inte FunErrorStatus
44 '
45 '###########################################################'
46 '       Program
47 '###########################################################'
48 Spd m_Fast
49 JOvrd 20
50 Ovrd m_ProgOvrd
51 Accel 15,15
52 Spd m_Fast
53 TOOL P_tGripperVac
54 Mov P_PCBPalletHelp
55 *RetryStep:
56  '>>>>>> Check if PCB pallet in position <<<<<<<<<<'
57  Spd m_Fast
58  TOOL P_tGripperVac
59  FunErrorStatus = 0
60  CallP "GrpClose"
61  If ((m_IsTrayLocked = 0) Or (DI_PCBPalletNo > 13) Or (DI_PCBPalletNo < 1) Or (DI_PalletInFront = 0)) GoTo *RetryStep
62  m_IsTryUsedByRob = 1
63  '
64  '>>>>>> Pick the PCB from Pallet <<<<<<<<<<'
65  Mov (Plt 1,DI_PCBPalletNo),-150
66  Mvs (Plt 1,DI_PCBPalletNo), -30
67  Spd m_Slow
68  Mvs (Plt 1,DI_PCBPalletNo)
69  Dly 0.5
70  CallP "GrpVacOn"
71  Mvs (Plt 1,DI_PCBPalletNo), -30
72  m_IsVacEnrgSvEna = 1
73  Mvs (Plt 1,DI_PCBPalletNo),-150
74  m_IsTryUsedByRob = 0
75 If (DI_PCBGripped = 0) Then
76 	m_IsVacEnrgSvEna = 0
77 	CallP "GrpClose"
78 	FunErrorStatus% = m_NoPCBAtPalNo
79 	EndIf
80 	If (FunErrorStatus% > 0) GoTo *ErrorLable
81  '
82  '>>>>>> Place the PCB at the assembly position <<<<<<<<<<'
83  Spd m_Fast
84  TOOL P_tGripperNone
85  Mov P_Home
86  TOOL P_tGripperVac
87  Mov P_AssemblePCB, -150
88  Mvs P_AssemblePCB, -30
89  Spd m_Slow
90  Mvs P_AssemblePCB
91  Dly 0.5
92  '
93  '>>>>>> Pick the PCB from assembly position <<<<<<<<<<'
94  m_IsVacEnrgSvEna = 0
95  CallP "GrpVacOn"
96  Spd m_Slow
97  Mvs P_AssemblePCB, -30
98  m_IsVacEnrgSvEna = 1
99  Mvs P_AssemblePCB, -150
100  TOOL P_tGripperNone
101  Mov P_Home
102  '
103  '>>>>>> Place the PCB at the Pallet position <<<<<<<<<<'
104 *RetryStep2:
105  Spd m_Fast
106  TOOL P_tGripperVac
107  FunErrorStatus = 0
108  If ((m_IsTrayLocked = 0) Or (DI_PCBPalletNo > 10) Or (DI_PCBPalletNo < 1) Or (DI_PalletInFront = 0)) GoTo *RetryStep2
109  m_IsTryUsedByRob = 1 
110 Mov (Plt 1,DI_PCBPalletNo),-150
111  Mvs (Plt 1,DI_PCBPalletNo), -30
112  Spd m_Slow
113  Mvs (Plt 1,DI_PCBPalletNo)
114  Dly 0.5
115  m_IsVacEnrgSvEna = 0
116  CallP "GrpVacOff"
117  Spd m_Slow
118  Mvs (Plt 1,DI_PCBPalletNo), -30
119  Spd m_Fast
120  Mvs (Plt 1,DI_PCBPalletNo), -110
121  m_IsTryUsedByRob = 0
122  Mov P_PCBPalletHelp
123 '>>>>>> Return if no error found <<<<<<<<<<'
124 GoTo *EndOfProg
125 
126  '
127  *ErrorLable:
128 	ReturnErrorValue = FunErrorStatus%
129 	If ((DI_RetryLastStep = 0) And (DI_ExitCurrCycle = 0)) GoTo *ErrorLable
130 	If DI_RetryLastStep = 1 GoTo *RetryStep
131 	If DI_ExitCurrCycle = 1 Then
132 		ReturnErrorValue = 0
133 		DO_MountLock = 0
134 	EndIf
135 *EndOfProg:
136 	m_ReturnedError = FunErrorStatus%
137 