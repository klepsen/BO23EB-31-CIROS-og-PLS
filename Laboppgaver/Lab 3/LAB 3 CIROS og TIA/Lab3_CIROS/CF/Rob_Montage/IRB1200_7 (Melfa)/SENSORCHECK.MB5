1 '##########################################################'
2 '### ProgramName:
3 '###  - SensorCheck
4 '###
5 '### ProgramDescription:
6 '### Check if workpiece present at stopper position
7 '### Check the fuse magazine sensors
8 '### Check the assembly position sensors
9 '### Check if PCB pallet position is valid
10 '###
11 '### Modifications:
12 '###  - 27.07.2016		Puneeth Rajendra		Created
13 '###
14 '##########################################################'
15 '
16 '##########################################################'
17 '		Decleration Of Input and Output signals
18 '##########################################################'
19 '>>>>>> INPUTS - Robot Controller <<<<<<<<'
20 Def Io DI_FuseMag1Avail = Bit,21 'Fuse available in magazine 1
21 Def Io DI_FuseMag2Avail = Bit,22 'Fuse available in magazine 2
22 Def Io DI_FuseMag3Avail = Bit,23 'Fuse available in magazine 3
23 Def Io DI_WrkPieceAvail = Bit,17 'Work piece available at assembly position
24 Def Io DI_OrientationOk = Bit,18 'Work piece at assembly position not upside down
25 '
26 '>>>>>> INPUTS - ProfiNet <<<<<<<<'
27 Def Io DI_RetryLastStep = Bit,132
28 Def Io DI_ExitCurrCycle = Bit,133
29 Def Io DI_PCBPalletNo = Byte,172
30 Def Io DI_WPPalAvail = Bit,250  'WP pallet is available
31 Def Io DI_WPAtStopAvail = Bit,251 'Workpiece available at stopper
32 '
33 '>>>>>> OUTPUTS - ProfiNet <<<<<<<<'
34 Def Io ReturnErrorValue = Byte,164 'Return value of Error to the PLC
35 '
36 '##########################################################'
37 '		Decleration Of Local Variables
38 '##########################################################'
39 Def Inte FunErrorStatus
40 '
41 '###########################################################'
42 '       Program
43 '###########################################################'
44 *RetryStep:
45 	'>>>>>> Initialize the values <<<<<<<<<<'
46 	FunErrorStatus% = 0
47 	ReturnErrorValue = 0
48 	If ((DI_RetryLastStep = 1) Or (DI_ExitCurrCycle = 1)) GoTo *RetryStep
49 	'
50 	'>>>>>> Check if workpiece present at stopper position <<<<<<<<<<'
51 	If (DI_WPAtStopAvail = 0) Then
52 		FunErrorStatus% = m_NoWPAtStopper
53 	EndIf
54 	If (FunErrorStatus% > 0) GoTo *ErrorLable
55 	'
56 	'>>>>>> Check if fuse magazines are empty <<<<<<<<<<'
57 	If ((DI_FuseMag1Avail = 0) And (DI_FuseMag2Avail = 0) And (DI_FuseMag3Avail = 0)) Then
58 		FunErrorStatus% = m_FuseMagEmpty
59 	EndIf
60 	If (FunErrorStatus% > 0) GoTo *ErrorLable
61 	'
62 	'>>>>>> Check if assembly position is occupied <<<<<<<<<<'
63 	If ((DI_WrkPieceAvail = 1) Or (DI_OrientationOk = 0)) Then
64 		FunErrorStatus% = m_WPAssPoseFull
65 	EndIf
66 	If (FunErrorStatus% > 0) GoTo *ErrorLable
67 	'
68 	'>>>>>> Check if PCB pallet position is valid <<<<<<<<<<'
69 	If ((DI_PCBPalletNo < 1) Or (DI_PCBPalletNo > m_MaxNoPCBPallet)) Then
70 		FunErrorStatus% = m_UndefPCBPalNo
71 	EndIf
72 	If (FunErrorStatus% > 0) GoTo *ErrorLable
73 	'
74 	'>>>>>> Return if no error found <<<<<<<<<<'
75 	GoTo *EndOfProg
76 	'
77 *ErrorLable:
78 		ReturnErrorValue = FunErrorStatus%
79 		If ((DI_RetryLastStep = 0) And (DI_ExitCurrCycle = 0)) GoTo *ErrorLable
80 		If DI_RetryLastStep = 1 GoTo *RetryStep
81 		If DI_ExitCurrCycle = 1 Then
82 			ReturnErrorValue = 0
83 		EndIf
84 *EndOfProg:
85 			m_ReturnedError = FunErrorStatus%
86 